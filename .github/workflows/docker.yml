name: Upload docker containers

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/docker.yml'
      - 'tf_sig_build_dockerfiles/**'
      - '!tf_sig_build_dockerfiles/README.md'
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [python3.7, python3.8, python3.9, python3.10]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDS }}
      -
        name: Checkout TensorFlow to get the current version
        uses: actions/checkout@v2
        with:
          repository: tensorflow/tensorflow
          path: tensorflow
          fetch-depth: 1
      -
        name: Grab the upcoming TF version to tag this container
        run: |
          # [[:digit:]] searches for numbers and \+ joins them together
          major_version=$(grep "^#define TF_MAJOR_VERSION" ./tensorflow/tensorflow/core/public/version.h | grep -o "[[:digit:]]\+")
          minor_version=$(grep "^#define TF_MINOR_VERSION" ./tensorflow/tensorflow/core/public/version.h | grep -o "[[:digit:]]\+")
          echo ::set-output name=TF_VERSION::${major_version}.${minor_version}
        id: tf-version
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./tf_sig_build_dockerfiles
          target: devel
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
          tags: |
            tensorflow/build:latest-${{ matrix.python-version }}
            tensorflow/build:${{ steps.tf-version.outputs.TF_VERSION }}-${{ matrix.python-version }}
            gcr.io/tensorflow-sigs/build:latest-${{ matrix.python-version }}
            gcr.io/tensorflow-sigs/build:${{ steps.tf-version.outputs.TF_VERSION }}-${{ matrix.python-version }}
          cache-from: type=registry,ref=tensorflow/build:latest-${{ matrix.python-version }}
          cache-to: type=inline
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

